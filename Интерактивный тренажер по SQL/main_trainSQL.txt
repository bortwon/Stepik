================== 1. Основы реляционной модели и SQL ========================

---------------- 1.1 Отношение (таблица) -----------------------

Реляционная модель определяет способ представления данных (структуру данных), методы защиты данных (целостность
данных), и операции, которые можно выполнять с данными (манипулирование данными).


Основные принципы реляционных баз данных:

- все данные на концептуальном уровне представляются в виде объектов, заданных в виде строк и столбцов, называемых отношением, более распространенное название – таблица;
- в пересечение строки и столбца таблицы можно занести только одно значение;
- все операции выполняются над целыми отношениями и результатом этих операций является отношение.


Пример отношения:
На примере таблицы Сотрудник рассмотрим терминологию реляционных баз данных:

- отношение  – это структура данных целиком, набор записей (в обычном понимании – таблица) , в  примере –это Сотрудник;
- кортеж – это каждая строка , содержащая данные (более распространенный термин – запись ), например, <001, Борин С.А, 234-01-23, программист>, все кортежи в отношении должны быть различны;
- мощность – число кортежей в таблице (проще говоря, число записей), в данном случае 3, мощность отношения может быть любой (от 0 до бесконечности), порядок следования кортежей - неважен;
- атрибут – это столбец в таблице (более распространенный термин – поле ), в примере – Табельный номер, Фамилия И.О., Телефон, Должность)
- размерность – это число атрибутов в таблице, в данном случае – 4;
- размерность отношения должна быть больше 0, порядок следования атрибутов существенен;
- домен атрибута – это допустимые значения (неповторяющиеся), которые можно занести в поле , например для атрибута
Должность домен – {инженер, программист}.


---------- Задание --------------
Для таблицы Сотрудник отметьте верные ячейки (В каждом столбце и строке - один правильный ответ).

Сотрудник - отношение
4 - размерность
002, Иванов И.И., 234-12-01, инженер - кортеж
3 - мощность
{###-##-##}, где # - цифра от 0 до 9 - домен
Фамилия И.О. - атрибут
----------------------------------


--------------------------------------------
Перед созданием таблицы в базе данных необходимо описать ее структуру. Для этого выполняется следующая
последовательность шагов:

1. Дать таблице имя, пусть она будет называться book, вот некоторые правила для выбора имен таблиц:

- может включать английские буквы, цифры и знак подчеркивания, должно начинаться с буквы;
- имя должно быть уникальным в пределах базы данных.

Также рекомендуется:

- чтобы имя было существительным в единственном числе;
- имя должно быть понятным и соответствовать тому объекту, который оно описывает;
- имя должно быть как можно короче, максимум до 10 символов.

Важно. Имена таблиц являются регистрозависимыми из-за операционной системы на которой работает stepik, то есть
имя book и Book – разные имена. Рекомендуется для записи имен таблиц использовать только строчные (маленькие)
буквы.


2. Определить структуру таблицы, из каких атрибутов(столбцов, полей) она будет состоять,  в нашем случае это:

- title – поле для хранения названия книги;
- author – поле с фамилией автора книги ;
- priсe – цена книги;
- amount – количество книг.

Правила по выбору имени поля информационного объекта:

- может включать английские буквы, цифры и знак подчеркивания, должно начинаться с буквы;
- имя поля должно быть уникальным в пределах таблицы.

Рекомендации по выбору имени поля информационного объекта:

- имя должно быть понятным и соответствовать тем данным, которые хранятся в поле;
- имя может состоять из нескольких слов, тогда слова разделяются подчеркиванием, после подчеркивания слово пишется
с маленькой буквы.


3. Включить ключевое поле book_id, которое является ОБЯЗАТЕЛЬНЫМ ЭЛЕМЕНТОМ каждой реляционной таблицы. Ключевое
поле является уникальным для каждой записи, однозначно определяет запись и в дальнейшем будет использоваться для
связей с другими таблицами.

Рекомендации по именованию  ключевых полей:

- имя должно состоять  из двух частей: начинаться с названия таблицы, которой поле принадлежит, затем через
подчеркивание необходимо указать id.
Таким образом, наша таблицаbookбудет выглядеть следующим образом:

book_id	       title	      author	     price	  amount
1	     Мастер и Маргарита	Булгаков М.А.	670.99	    3
2	     Белая гвардия	    Булгаков М.А.	540.50	    5
3	     Идиот	            Достоевский Ф.М.	460	    10
4	     Братья Карамазовы	Достоевский Ф.М.	799.01  2
------------------------------------------------------


------------------ Задание -----------------------
Отметьте ПРАВИЛЬНЫЕ имена, которые можно выбрать в качестве названий таблиц или полей.

- name_book
- store
- price_rub
-----------------------------------------------------


------------------------------------------
Выбор типов данных для полей
После описания структуры таблицы необходимо выбрать типы данных для каждого поля.

Основные типы данных SQL:

INT
INTEGER
Целое число, могут принимать значения от -2 147 483 648 до 2 147 483 647

DECIMAL
NUMERIC
Вещественное число, в скобках указывается максимальная длина числа (включает символы слева и справа от десятичной
запятой) и количество знаков после запятой. Можно использовать оба этих типа, они эквивалентны, принимают значения в
диапазоне -1038+1 до 1038-1.
DECIMAL(4,1)
NUMERIC(6,3)



DATE
Дата в формате ГГГГ-ММ-ДД
26 июля 2020 года
3 января 2021 года
2020-07-26
2021-01-03


VARCHAR
Строка длиной не более 255 символов,
в скобках указывается максимальная
длина строки, которая может храниться в поле
VARCHAR(10)(рассматриваются однобайтовые кодировки,
для которых число в скобках соответствует максимальному
количеству символов в строке)


Рекомендации по выбору типов данных для полей таблицы.

- Выбирайте минимальный тип данных исходя из максимального значения поля. Например, если максимальный текст, который
может быть записан в поле, имеет длину 25 символов, значит нужно использовать тип VARCHAR(25).
- Для описания ключевого поля используйте описание INT PRIMARY KEY AUTO_INCREMENT. Это значит, что в поле будут
заноситься различные целые числа, при этом они будут автоматически генерироваться (каждая следующая строка будет иметь
значение ключа на 1 больше предыдущего).


Определим тип данных для каждого поля таблицы book:

book_id	         title	            author	            price	amount
1	        Мастер и Маргарита	  Булгаков М.А.	        670.99	  3
2	        Белая гвардия	      Булгаков М.А.	        540.50	  5
3	        Идиот	              Достоевский Ф.М.	    460	      10
4	        Братья Карамазовы	  Достоевский Ф.М.	    799.01	  2


book_id - ключевой столбец, целое число, которое должно генерироваться автоматически  - INT PRIMARY KEY AUTO_INCREMENT;
title - строка текста, ее длина выбирается в зависимости от данных, которые предполагается хранить в поле,
предположим, что название книги не превышает 50 символов - VARCHAR(50);
author - строка текста - VARCHAR(30);
priсe - для описание денежного значения используется числовой тип данных с двумя знаками после запятой - DECIMAL(8,2);
amount - целое число - INT.
-----------------------------------------------------------------


-----------------------------------------------------------
Рекомендации по записи SQL запроса

- Ключевые слова: SQL не является регистрозависимым языком (CREATE и create - одно и тоже ключевое слово).
- Ключевые слова SQL и типы данных рекомендуется  записывать прописными (большими) буквами.
- Имена таблиц и полей - строчными (маленькими) буквами.
- SQL-запрос можно писать на нескольких строках.
- В конце SQL-запроса ставится точка с запятой (хотя если Вы пишете один запрос, это необязательно).


------------------------------
Задание 1

Сформулируйте SQL запрос для создания таблицы book, занесите его в окно кода (расположено ниже) и отправьте на
проверку (кнопка Отправить). Структура таблицы book:

Поле	Тип, описание
book_id	INT PRIMARY KEY AUTO_INCREMENT
title	VARCHAR(50)
author	VARCHAR(30)
price	DECIMAL(8, 2)
amount	INT

CREATE TABLE book (
    book_id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(50),
    author VARCHAR(30),
    price DECIMAL(8, 2),
    amount INT)
;
------------------------------------------


------------------------------------------
Вставка записи в таблицу

Пример. В таблицу, состоящую из двух столбцов добавим новую строку, при этом в поле1 заносится значение1,  в поле2 - значение2.

INSERT INTO таблица(поле1, поле2)
VALUES (значение1, значение2);

INSERT INTO genre (name_genre)
VALUES ('Роман');


Чтобы увидеть как именно выглядит таблица genre, можно добавить SQL запрос, который выберет все записи из таблицы:

SELECT * FROM genre;
-----------------------------------------------


----------------------------------------------
Задание 2

Занесите новую строку в таблицу book (текстовые значения (тип VARCHAR) заключать либо в двойные, либо в одинарные
кавычки):

book_id	title	author	price	amount
# INT PRIMARY KEY AUTO_INCREMENT	VARCHAR(50)	VARCHAR(30)	DECIMAL(8,2)	INT
# 1	Мастер и Маргарита	Булгаков М.А.	670.99	3

INSERT INTO book (title, author, price, amount)
VALUES ('Мастер и Маргарита', 'Булгаков М.А.', 670.99, 3);

SELECT * FROM book

Query result:
+---------+--------------------+---------------+--------+--------+
| book_id | title              | author        | price  | amount |
+---------+--------------------+---------------+--------+--------+
| 1       | Мастер и Маргарита | Булгаков М.А. | 670.99 | 3      |
+---------+--------------------+---------------+--------+--------+
Affected rows: 1
--------------------------------------------------------------


-----------------------------------------------------------
Задание

Занесите три последние записи в таблицуbook,  первая запись уже добавлена на предыдущем шаге:

book_id	title	author	price	amount
INT PRIMARY KEY AUTO_INCREMENT	VARCHAR(50)	VARCHAR(30)	DECIMAL(8,2)	INT
1	Мастер и Маргарита	Булгаков М.А.	670.99	3
2	Белая гвардия	Булгаков М.А.	540.50	5
3	Идиот	Достоевский Ф.М.	460.00	10
4	Братья Карамазовы	Достоевский Ф.М.	799.01	2

INSERT INTO book (title, author, price, amount) VALUES ('Белая гвардия', 'Булгаков М.А.', 540.50, 5);
INSERT INTO book (title, author, price, amount) VALUES ('Идиот', 'Достоевский Ф.М.', 460.00, 10);
INSERT INTO book (title, author, price, amount) VALUES ('Братья Карамазовы', 'Достоевский Ф.М.', 799.01, 2);

SELECT * FROM book

Query result:
+---------+--------------------+------------------+--------+--------+
| book_id | title              | author           | price  | amount |
+---------+--------------------+------------------+--------+--------+
| 1       | Мастер и Маргарита | Булгаков М.А.    | 670.99 | 3      |
| 2       | Белая гвардия      | Булгаков М.А.    | 540.50 | 5      |
| 3       | Идиот              | Достоевский Ф.М. | 460.00 | 10     |
| 4       | Братья Карамазовы  | Достоевский Ф.М. | 799.01 | 2      |
+---------+--------------------+------------------+--------+--------+

-------------------------------------------------------------------------



---------------- 1.2. Выборка данных -----------------------

----------------------------------
Выборка всех данных из таблицы
---------------------------------


Выбрать все записи таблицы book.

Запрос:
SELECT * FROM book;


Задание 1
Вывести информацию о всех книгах, хранящихся на складе.

Для этого:

Напишите SQL запрос в окне кода;
Отправьте на проверку (кнопка  Отправить);
Если запрос работает неверно, исправьте его и снова отправьте на проверку.
Важно! В окне кода можно использовать комментарии для сохранения разных вариантов запросов или пояснений.
Комментарии заключаются в /* и */

SELECT * FROM book

Query result:
+---------+-----------------------+------------------+--------+--------+
| book_id | title                 | author           | price  | amount |
+---------+-----------------------+------------------+--------+--------+
| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
| 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
+---------+-----------------------+------------------+--------+--------+
Affected rows: 5

-------------------------------------



---------------------------------------
Выборка отдельных столбцов
---------------------------------------

Выбрать названия книг и их количества из таблицы book .

Запрос:
SELECT title, amount FROM book;

-----------------------------------------
Задание 2
Выбрать авторов, название книг и их цену из таблицы book.

SELECT author, title, price FROM book

Query result:
+------------------+-----------------------+--------+
| author           | title                 | price  |
+------------------+-----------------------+--------+
| Булгаков М.А.    | Мастер и Маргарита    | 670.99 |
| Булгаков М.А.    | Белая гвардия         | 540.50 |
| Достоевский Ф.М. | Идиот                 | 460.00 |
| Достоевский Ф.М. | Братья Карамазовы     | 799.01 |
| Есенин С.А.      | Стихотворения и поэмы | 650.00 |
+------------------+-----------------------+--------+
Affected rows: 5
------------------------------------------



-----------------------------------------
Выборка новых столбцов и присвоение им новых имен
------------------------------------------

Выбрать все названия книг и их количества из таблицы book , для столбца title задать новое имя Название.

Запрос:
SELECT title AS Название, amount
FROM book;


# Задание 3
# Выбрать названия книг и авторов из таблицы book, для поля title задать имя(псевдоним)
# Название, для поля author – Автор.

SELECT title AS Название, author AS Автор FROM book;

# Query result:
# +-----------------------+------------------+
# | Название              | Автор            |
# +-----------------------+------------------+
# | Мастер и Маргарита    | Булгаков М.А.    |
# | Белая гвардия         | Булгаков М.А.    |
# | Идиот                 | Достоевский Ф.М. |
# | Братья Карамазовы     | Достоевский Ф.М. |
# | Стихотворения и поэмы | Есенин С.А.      |
# +-----------------------+------------------+
# Affected rows: 5
-------------------------------------------------



# Задание 4
# Для упаковки каждой книги требуется один лист бумаги, цена которого 1 рубль 65 копеек. Посчитать стоимость упаковки
# для каждой книги (сколько денег потребуется, чтобы упаковать все экземпляры книги). В запросе вывести название книги,
# ее количество и стоимость упаковки, последний столбец назвать pack.

SELECT title, amount, amount * 1.65 AS pack FROM book;

# Query result:
# +-----------------------+--------+-------+
# | title                 | amount | pack  |
# +-----------------------+--------+-------+
# | Мастер и Маргарита    | 3      | 4.95  |
# | Белая гвардия         | 5      | 8.25  |
# | Идиот                 | 10     | 16.50 |
# | Братья Карамазовы     | 2      | 3.30  |
# | Стихотворения и поэмы | 15     | 24.75 |
# +-----------------------+--------+-------+
# Affected rows: 5



# Функция	Описание
# CEILING(x) - возвращает наименьшее целое число, большее или равное x (округляет до целого числа в большую сторону)
# ROUND(x, k)	округляет значение x до k знаков после запятой, если k не указано – x округляется до целого
# FLOOR(x)	возвращает наибольшее целое число, меньшее или равное x (округляет до  целого числа в меньшую сторону)
# POWER(x, y)	возведение x в степень y	POWER(3,4)=81.0
# SQRT(x)	квадратный корень из x	SQRT(4)=2.0
# DEGREES(x)	конвертирует значение x из радиан в градусы	DEGREES(3) = 171.8...
# RADIANS(x)	конвертирует значение x из градусов в радианы	RADIANS(180)=3.14...
# ABS(x)	модуль числа x	ABS(-1) = 1
# PI()	pi = 3.1415926...


# Задание 5
# В конце года цену всех книг на складе пересчитывают – снижают ее на 30%. Написать SQL запрос, который из таблицы
# book выбирает названия, авторов, количества и вычисляет новые цены книг. Столбец с новой ценой назвать new_price,
# цену округлить до 2-х знаков после запятой.

SELECT title, author, amount, ROUND(price - price * 0.3, 2) AS new_price FROM book;

# Query result:
# +-----------------------+------------------+--------+-----------+
# | title                 | author           | amount | new_price |
# +-----------------------+------------------+--------+-----------+
# | Мастер и Маргарита    | Булгаков М.А.    | 3      | 469.69    |
# | Белая гвардия         | Булгаков М.А.    | 5      | 378.35    |
# | Идиот                 | Достоевский Ф.М. | 10     | 322.00    |
# | Братья Карамазовы     | Достоевский Ф.М. | 2      | 559.31    |
# | Стихотворения и поэмы | Есенин С.А.      | 15     | 455.00    |
# +-----------------------+------------------+--------+-----------+
# Affected rows: 5



# Задание 6
# При анализе продаж книг выяснилось, что наибольшей популярностью пользуются книги Михаила Булгакова, на втором месте
# книги Сергея Есенина. Исходя из этого решили поднять цену книг Булгакова на 10%, а цену книг Есенина - на 5%.
# Написать запрос, куда включить автора, название книги и новую цену, последний столбец назвать new_price. Значение
# округлить до двух знаков после запятой.

SELECT
    author,
    title,
    IF(author = 'Булгаков М.А.', ROUND(price * 1.1, 2), IF(author = 'Есенин С.А.', ROUND(price * 1.05, 2), price)) AS new_price
    FROM book;

# Query result:
# +------------------+-----------------------+-----------+
# | author           | title                 | new_price |
# +------------------+-----------------------+-----------+
# | Булгаков М.А.    | Мастер и Маргарита    | 738.09    |
# | Булгаков М.А.    | Белая гвардия         | 594.55    |
# | Достоевский Ф.М. | Идиот                 | 460.00    |
# | Достоевский Ф.М. | Братья Карамазовы     | 799.01    |
# | Есенин С.А.      | Стихотворения и поэмы | 682.50    |
# +------------------+-----------------------+-----------+
# Affected rows: 5


# Задание 7
# Вывести автора, название  и цены тех книг, количество которых меньше 10.

SELECT author, title, price FROM book
WHERE amount < 10;

# Query result:
# +------------------+--------------------+--------+
# | author           | title              | price  |
# +------------------+--------------------+--------+
# | Булгаков М.А.    | Мастер и Маргарита | 670.99 |
# | Булгаков М.А.    | Белая гвардия      | 540.50 |
# | Достоевский Ф.М. | Братья Карамазовы  | 799.01 |
# +------------------+--------------------+--------+
# Affected rows: 3



# Задание 8
# Вывести название, автора,  цену  и количество всех книг, цена которых меньше 500 или больше 600, а стоимость всех
# экземпляров этих книг больше или равна 5000.

SELECT title, author, price, amount FROM book
WHERE price * amount >= 5000 and (price < 500 or price > 600);

# Query result:
# +-----------------------+-------------+--------+--------+
# | title                 | author      | price  | amount |
# +-----------------------+-------------+--------+--------+
# | Стихотворения и поэмы | Есенин С.А. | 650.00 | 15     |
# +-----------------------+-------------+--------+--------+
# Affected rows: 1



# Задание 9
# Вывести название и авторов тех книг, цены которых принадлежат интервалу от 540.50 до 800 (включая границы),
# а количество или 2, или 3, или 5, или 7.

SELECT title, author FROM book
WHERE price BETWEEN 540.50 and 800 AND amount IN (2, 3, 5, 7);

# Query result:
# +--------------------+------------------+
# | title              | author           |
# +--------------------+------------------+
# | Мастер и Маргарита | Булгаков М.А.    |
# | Белая гвардия      | Булгаков М.А.    |
# | Братья Карамазовы  | Достоевский Ф.М. |
# +--------------------+------------------+
# Affected rows: 3


# Задание 10
# Вывести  автора и название  книг, количество которых принадлежит интервалу от 2 до 14 (включая границы).
# Информацию  отсортировать сначала по авторам (в обратном алфавитном порядке), а затем по названиям книг (по алфавиту).

SELECT author, title FROM book
WHERE amount BETWEEN 2 and 14
ORDER BY author DESC, title;

# Query result:
# +------------------+--------------------+
# | author           | title              |
# +------------------+--------------------+
# | Достоевский Ф.М. | Братья Карамазовы  |
# | Достоевский Ф.М. | Идиот              |
# | Булгаков М.А.    | Белая гвардия      |
# | Булгаков М.А.    | Мастер и Маргарита |
# +------------------+--------------------+
# Affected rows: 4



# Задание 11
# Вывести название и автора тех книг, название которых состоит из двух и более слов, а инициалы автора содержат
# букву «С». Считать, что в названии слова отделяются друг от друга пробелами и не содержат знаков препинания,
# между фамилией автора и инициалами обязателен пробел, инициалы записываются без пробела в формате: буква, точка,
# буква, точка. Информацию отсортировать по названию книги в алфавитном порядке.

SELECT title, author FROM book
WHERE title LIKE '_% _%'
    AND (author LIKE '%С.%' or author LIKE '%.С.')
ORDER BY title;

# Query result:
# +-----------------------+-------------+
# | title                 | author      |
# +-----------------------+-------------+
# | Капитанская дочка     | Пушкин А.С. |
# | Стихотворения и поэмы | Есенин С.А. |
# +-----------------------+-------------+
# Affected rows: 2



# Задание 12
# Придумайте один или несколько запросов к нашей таблице book. Проверьте, правильно ли они работают.

SELECT
    title,
    author,
    price,
    IF(author LIKE 'Д%', price * 0.8, price * 1.2) as new_price,
    IF(author LIKE 'Д%', 'Скидка 20%', 'Подорожание на 20%') AS Ваша_скидка
FROM book;

# Query result:
# +-----------------------+------------------+--------+-----------+--------------------+
# | title                 | author           | price  | new_price | Ваша_скидка        |
# +-----------------------+------------------+--------+-----------+--------------------+
# | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 805.188   | Подорожание на 20% |
# | Белая гвардия         | Булгаков М.А.    | 540.50 | 648.600   | Подорожание на 20% |
# | Идиот                 | Достоевский Ф.М. | 460.00 | 368.000   | Скидка 20%         |
# | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 639.208   | Скидка 20%         |
# | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 780.000   | Подорожание на 20% |
# +-----------------------+------------------+--------+-----------+--------------------+
# Affected rows: 5




