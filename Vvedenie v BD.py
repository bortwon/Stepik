# ====================================1.1 Термины и определения=========================================================

# Что такое кортеж в терминологии баз данных?
# строка в таблице, набор значений атрибутов


# Что не является характеристикой реляционных СУБД?
# простота представления любой предметной области в виде набора таблиц


# Где применяются базы данных?
# - В банковских системах
# - В веб-сервисах
# - В мобильных приложениях
# - В электронных библиотеках


# ----------------------------------------------------------------------------------------------------------------------
# База данных платежной системы `billing_simple` состоит из одной таблицы `billing` следующей структуры:
#
# CREATE TABLE IF NOT EXISTS `billing_simple`.`billing` (
#   `payer_email` VARCHAR(255) NULL,
#   `recipient_email` VARCHAR(255) NULL,
#   `sum` DECIMAL(18,2) NULL,
#   `currency` VARCHAR(3) NULL,
#   `billing_date` DATE NULL,
#   `comment` TEXT NULL)
# ENGINE = InnoDB;
# Задание
# Выведите поступления денег от пользователя с email 'vasya@mail.com'.
# В результат включите все столбцы таблицы и не меняйте порядка их вывода. Если, конечно, хотите успешно пройти
# проверку результата запроса )

use billing_simple;

SELECT * FROM billing
WHERE payer_email = 'vasya@mail.com';

# ----------------------------------------------------------------------------------------------------------------------

# Добавьте в таблицу одну запись о платеже со следующими значениями:
# email плательщика: 'pasha@mail.com'
# email получателя: 'katya@mail.com'
# сумма: 300.00
# валюта: 'EUR'
# дата операции: 14.02.2016
# комментарий: 'Valentines day present)'

INSERT INTO billing (
payer_email, recipient_email, sum, currency, billing_date, comment)
VALUES (
'pasha@mail.com',
'katya@mail.com',
300.00,
'EUR',
'2016-02-14',
'Valentines day present)');

# ----------------------------------------------------------------------------------------------------------------------

# Измените адрес плательщика на 'igor@mail.com' для всех записей таблицы, где адрес плательщика 'alex@mail.com'.

UPDATE billing SET payer_email='igor@mail.com'
	WHERE payer_email='alex@mail.com'

# ----------------------------------------------------------------------------------------------------------------------

# Удалите из таблицы записи, где адрес плательщика или адрес получателя установлен в неопределенное значение или
# пустую строку.

DELETE FROM billing
WHERE payer_email is NULL
OR recipient_email is null
OR payer_email = ''
OR recipient_email = '';

# ----------------------------------------------------------------------------------------------------------------------

